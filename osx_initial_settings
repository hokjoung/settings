vim ~/.vimrc
vim ~/.gitconfig

chsh -s /bin/bash //change default shell to bash such that below bash configs are properly applied
vim ~/.bashrc
vim ~/.bash_profile (contains below)
  if [ -r ~/.bashrc ]; then
   source ~/.bashrc
  fi
  export BASH_SILENCE_DEPRECATION_WARNING=1

1. system pref -> accessibility -> trackpad options -> enable dragging (three finger drag)
2. system pref -> keyboard -> input sources -> select the previous input source = cmd + space
3. system pref -> keyboard -> spotlight -> show spotlight search = option + space
4. terminal -> preferences -> profiles tab -> window tab -> window size : col=100, row=30
5. terminal -> preferences -> profiles tab -> shell tab -> when the shell exits : close the window, ask before closing : only if there are processes other than the login shell and :
6. (if prev commands in terminal are wrapped with square brackets) terminal -> edit -> marks -> Automatically Mark Prompt Lines -> turn off (cmd line version : defaults write com.apple.Terminal AutoMarkPromptLines -bool NO)
7. automator -> new QuickAction -> Workflow receives : no input, in : any application -> drag 'Run Shell Script' -> Shell : /bin/bash, pass input : to stdin, pmset displaysleepnow -> save name as 'Lock Screen' -> sys pref -> keyboard -> shortcuts tab -> Services -> scroll all the way down -> General > Lock Screen -> set shortcut to 'control-command-]'
8. automator -> new QuickAction -> Workflow receives : Automatic(Nothing), in : any application -> drag 'Run AppleScript' -> add below:
  on run {input, parameters}
	  tell application "Terminal"
		  activate
		  set t to do script "cd ~/Documents/cicada"
		  do script "vim $(date +'%F_%R')" in t
	  end tell
	  return input
  end run
-> save name as 'Open Vim' -> sys pref -> keyboard -> shortcuts tab -> Services -> scroll all the way down -> General > Open Vim -> set shortcut to 'control-v'
9. sys pref -> keyboard -> shortcuts tab -> mission control -> set short cut to 'control-g'
10. terminal -> write following command -> 'defaults write -g InitialKeyRepeat 25'
11. terminal -> write following command -> 'defaults write -g KeyRepeat 2'
12. sys pref -> keyboard -> key repeat : off(0) slow | | | | | fast(7) -> set to fast
13. sys pref -> keyboard -> delay until repeat : long(0)   |   |   |   |   short(5) -> set to 4
14. get homebrew
15. sys pref -> trackpad -> turn off 'Scroll direction: Natural'
16. slack -> sign in to multiple workspaces to get rid of top bar / ribbon (from release note : 'If you're signed into more than one team, we've removed the titlebar from the window for a streamlined, high fashion look. We call it: Menumalist.')
17. git -> https://help.github.com/articles/caching-your-github-password-in-git/ (setting osxkeychain as credential to cache github password)
18. terminal font. terminal -> preferences -> profiles -> text -> font -> Menlo Regular 11pt. (osx yosemite font)
19. sys pref -> keyboard -> keyboard -> Modifier Keys -> set Caps Lock to Escape

jdk
  1  brew update
  2  brew tap adoptopenjdk/openjdk
  3  brew cask install adoptopenjdk8
  4  java -version

intellij
Navigate > Back		    option + cmd + [
Navigate > Forward	  option + cmd + ]
Select next tab	  	  cmd + shift + ]	
Select previous tab  	cmd + shift + [
install lombok plugin
install ideavim plugin

bookmarks


firefox plugins
- ublock origin
- privacy badger
- vimium

youtube disable vid preview
- settings > Playback and performance > toggle Video previews off

pass
   1  brew install pass
   2  pass
   3  pass init
   4  gpg —gen-key
   5  gpg —list-keys
   6  pass init "{gpg_pub_id}" (ref on how to get pub_id : https://security.stackexchange.com/questions/110139/gnupg-asks-for-a-key-id-when-sharing-my-public-key-what-is-that)
   7  pass
   
   #import from git (remember to copy gpg keys from old computer to new computer)
   1  brew install pass
   2  pass init "hokjoung viva pass"
   3  pass git init
   4  pass git remote add origin https://github.com/hokjoung/viva-hokjoung_pass.git
   5  pass git reset --hard origin/master
   // make sure gpg id in ~/.password-store/.gpg-id is the imported gpg key
   
gpg
  1 gpg --list-keys
  2 gpg --list-secret-keys
  3 gpg --export -a "viva-hokjoung" > public.key
  4 gpg --export-secret-key -a "viva-hokjoung" > private.key
  5 gpg --import public.key
  6 gpg --allow-secret-key-import --import private.key

node.js and npm
install from https://nodejs.org/en/

rails
homebrew
rvm - (https://rvm.io/rvm/install reference(rare case keyserver fails): https://rvm.io/rvm/security)
  brew install gnupg
history
    1  rvm
    2  ruby -v
    3  gem -v
    4  gem update --system
    5  rvm gemset list
    6  rvm gemset use global
    7  gem list
    8  gem update
    9  echo "gem: --no-document" >> ~/.gemrc
   10  vim ~/.gemrc
   11  gem install bundler
   12  gem install nokogiri
   13  ruby -v
   14  rvm use ruby-2.5.1@rails5.2 --create   (naming depends on installed version of ruby and current stable version of rails check them! $ ruby -v and https://rubygems.org/gems/rails)
   15  gem install rails
   16  brew install mysql
   17  bundle install
   18  rails -v
add jbuilder into Gemlist


-apps----
datagrip
deezer
docker
firefox
intellij idea
kakaotalk
menubarx
postman
pycharm
rubymine
skitch
slack
sublime
text wrangler
virtualbox

parallels desktop
vlc
wireshark

-tips----
$ docker run -it ubuntu bash
to remove all end-of-line in a file. open file with vim - :set binary -> :set noeol
